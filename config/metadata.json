{
    "Schema":"sample",
    "Tables":{
        "Brands":{
            "Name":"Brands",
            "Type":"table",
            "PrimaryKeys":[
                "brand_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"brand_name",
                    "type":"VARCHAR(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"brand_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Brands.brand_id, Brands.brand_name)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Brands.brand_id, Brands.brand_name)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('brand_id', INTEGER(), table=<Brands>, primary_key=True))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024c8070>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024836c0>",
                "foreign_keys":"set()",
                "fullname":"Brands",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Brands",
                "primary_key":"PrimaryKeyConstraint(Column('brand_id', INTEGER(), table=<Brands>, primary_key=True))",
                "schema":null
            }
        },
        "Car_Options":{
            "Name":"Car_Options",
            "Type":"table",
            "PrimaryKeys":[
                "option_set_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"model_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"engine_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"transmission_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"chassis_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"premium_sound_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"color",
                    "type":"VARCHAR(30)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"option_set_price",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"option_set_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Car_Options.option_set_id, Car_Options.model_id, Car_Options.engine_id, Car_Options.transmission_id, Car_Options.chassis_id, Car_Options.premium_sound_id, Car_Options.color, Car_Options.option_set_price)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Car_Options.option_set_id, Car_Options.model_id, Car_Options.engine_id, Car_Options.transmission_id, Car_Options.chassis_id, Car_Options.premium_sound_id, Car_Options.color, Car_Options.option_set_price)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024da630>, None, link_to_name=True, table=Table('Car_Options', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Options>), Column('engine_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('transmission_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('chassis_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('premium_sound_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>), Column('color', VARCHAR(length=30), table=<Car_Options>, nullable=False), Column('option_set_price', INTEGER(), table=<Car_Options>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024c3ef0>, None, link_to_name=True, table=Table('Car_Options', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Options>), Column('engine_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('transmission_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('chassis_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('premium_sound_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>), Column('color', VARCHAR(length=30), table=<Car_Options>, nullable=False), Column('option_set_price', INTEGER(), table=<Car_Options>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024da770>, None, link_to_name=True, table=Table('Car_Options', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Options>), Column('engine_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('transmission_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('chassis_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('premium_sound_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>), Column('color', VARCHAR(length=30), table=<Car_Options>, nullable=False), Column('option_set_price', INTEGER(), table=<Car_Options>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024cc810>, None, link_to_name=True, table=Table('Car_Options', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Options>), Column('engine_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('transmission_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('chassis_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('premium_sound_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>), Column('color', VARCHAR(length=30), table=<Car_Options>, nullable=False), Column('option_set_price', INTEGER(), table=<Car_Options>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024da540>, None, link_to_name=True, table=Table('Car_Options', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Options>), Column('engine_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('transmission_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('chassis_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>, nullable=False), Column('premium_sound_id', INTEGER(), ForeignKey('Car_Parts.part_id'), table=<Car_Options>), Column('color', VARCHAR(length=30), table=<Car_Options>, nullable=False), Column('option_set_price', INTEGER(), table=<Car_Options>, nullable=False), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024de8e0>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024839c0>",
                "foreign_keys":"{ForeignKey('Car_Parts.part_id'), ForeignKey('Models.model_id'), ForeignKey('Car_Parts.part_id'), ForeignKey('Car_Parts.part_id'), ForeignKey('Car_Parts.part_id')}",
                "fullname":"Car_Options",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Car_Options",
                "primary_key":"PrimaryKeyConstraint(Column('option_set_id', INTEGER(), table=<Car_Options>, primary_key=True))",
                "schema":null
            }
        },
        "Car_Parts":{
            "Name":"Car_Parts",
            "Type":"table",
            "PrimaryKeys":[
                "part_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"part_name",
                    "type":"VARCHAR(100)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufacture_plant_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufacture_start_date",
                    "type":"DATE",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufacture_end_date",
                    "type":"DATE",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"part_recall",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"0",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"part_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Car_Parts.part_id, Car_Parts.part_name, Car_Parts.manufacture_plant_id, Car_Parts.manufacture_start_date, Car_Parts.manufacture_end_date, Car_Parts.part_recall)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Car_Parts.part_id, Car_Parts.part_name, Car_Parts.manufacture_plant_id, Car_Parts.manufacture_start_date, Car_Parts.manufacture_end_date, Car_Parts.part_recall)",
                "comment":null,
                "constraints":"{ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024cc950>, None, link_to_name=True, table=Table('Car_Parts', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('part_id', INTEGER(), table=<Car_Parts>, primary_key=True), Column('part_name', VARCHAR(length=100), table=<Car_Parts>, nullable=False), Column('manufacture_plant_id', INTEGER(), ForeignKey('Manufacture_Plant.manufacture_plant_id'), table=<Car_Parts>, nullable=False), Column('manufacture_start_date', DATE(), table=<Car_Parts>, nullable=False), Column('manufacture_end_date', DATE(), table=<Car_Parts>), Column('part_recall', INTEGER(), table=<Car_Parts>, server_default=DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x1024d3b20>, for_update=False)), schema=None)), PrimaryKeyConstraint(Column('part_id', INTEGER(), table=<Car_Parts>, primary_key=True)), CheckConstraint(<sqlalchemy.sql.elements.TextClause object at 0x1024d3d00>, table=Table('Car_Parts', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('part_id', INTEGER(), table=<Car_Parts>, primary_key=True), Column('part_name', VARCHAR(length=100), table=<Car_Parts>, nullable=False), Column('manufacture_plant_id', INTEGER(), ForeignKey('Manufacture_Plant.manufacture_plant_id'), table=<Car_Parts>, nullable=False), Column('manufacture_start_date', DATE(), table=<Car_Parts>, nullable=False), Column('manufacture_end_date', DATE(), table=<Car_Parts>), Column('part_recall', INTEGER(), table=<Car_Parts>, server_default=DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x1024d3b20>, for_update=False)), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024d3d90>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024cd5c0>",
                "foreign_keys":"{ForeignKey('Manufacture_Plant.manufacture_plant_id')}",
                "fullname":"Car_Parts",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Car_Parts",
                "primary_key":"PrimaryKeyConstraint(Column('part_id', INTEGER(), table=<Car_Parts>, primary_key=True))",
                "schema":null
            }
        },
        "Car_Vins":{
            "Name":"Car_Vins",
            "Type":"table",
            "PrimaryKeys":[
                "vin"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"model_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"option_set_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufactured_date",
                    "type":"DATE",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufactured_plant_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"vin",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Car_Vins.vin, Car_Vins.model_id, Car_Vins.option_set_id, Car_Vins.manufactured_date, Car_Vins.manufactured_plant_id)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Car_Vins.vin, Car_Vins.model_id, Car_Vins.option_set_id, Car_Vins.manufactured_date, Car_Vins.manufactured_plant_id)",
                "comment":null,
                "constraints":"{ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024da9a0>, None, link_to_name=True, table=Table('Car_Vins', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('vin', INTEGER(), table=<Car_Vins>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Vins>, nullable=False), Column('option_set_id', INTEGER(), ForeignKey('Car_Options.option_set_id'), table=<Car_Vins>, nullable=False), Column('manufactured_date', DATE(), table=<Car_Vins>, nullable=False), Column('manufactured_plant_id', INTEGER(), ForeignKey('Manufacture_Plant.manufacture_plant_id'), table=<Car_Vins>, nullable=False), schema=None)), PrimaryKeyConstraint(Column('vin', INTEGER(), table=<Car_Vins>, primary_key=True)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024dac20>, None, link_to_name=True, table=Table('Car_Vins', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('vin', INTEGER(), table=<Car_Vins>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Vins>, nullable=False), Column('option_set_id', INTEGER(), ForeignKey('Car_Options.option_set_id'), table=<Car_Vins>, nullable=False), Column('manufactured_date', DATE(), table=<Car_Vins>, nullable=False), Column('manufactured_plant_id', INTEGER(), ForeignKey('Manufacture_Plant.manufacture_plant_id'), table=<Car_Vins>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024daae0>, None, link_to_name=True, table=Table('Car_Vins', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('vin', INTEGER(), table=<Car_Vins>, primary_key=True), Column('model_id', INTEGER(), ForeignKey('Models.model_id'), table=<Car_Vins>, nullable=False), Column('option_set_id', INTEGER(), ForeignKey('Car_Options.option_set_id'), table=<Car_Vins>, nullable=False), Column('manufactured_date', DATE(), table=<Car_Vins>, nullable=False), Column('manufactured_plant_id', INTEGER(), ForeignKey('Manufacture_Plant.manufacture_plant_id'), table=<Car_Vins>, nullable=False), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024e63a0>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024e3140>",
                "foreign_keys":"{ForeignKey('Manufacture_Plant.manufacture_plant_id'), ForeignKey('Car_Options.option_set_id'), ForeignKey('Models.model_id')}",
                "fullname":"Car_Vins",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Car_Vins",
                "primary_key":"PrimaryKeyConstraint(Column('vin', INTEGER(), table=<Car_Vins>, primary_key=True))",
                "schema":null
            }
        },
        "Customer_Ownership":{
            "Name":"Customer_Ownership",
            "Type":"table",
            "PrimaryKeys":[
                "customer_id",
                "vin"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"purchase_date",
                    "type":"DATE",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"purchase_price",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"warantee_expire_date",
                    "type":"DATE",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"dealer_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"customer_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                },
                {
                    "name":"vin",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"2"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Customer_Ownership.customer_id, Customer_Ownership.vin, Customer_Ownership.purchase_date, Customer_Ownership.purchase_price, Customer_Ownership.warantee_expire_date, Customer_Ownership.dealer_id)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Customer_Ownership.customer_id, Customer_Ownership.vin, Customer_Ownership.purchase_date, Customer_Ownership.purchase_price, Customer_Ownership.warantee_expire_date, Customer_Ownership.dealer_id)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('customer_id', INTEGER(), ForeignKey('Customers.customer_id'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('vin', INTEGER(), ForeignKey('Car_Vins.vin'), table=<Customer_Ownership>, primary_key=True, nullable=False)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024e91d0>, None, link_to_name=True, table=Table('Customer_Ownership', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('customer_id', INTEGER(), ForeignKey('Customers.customer_id'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('vin', INTEGER(), ForeignKey('Car_Vins.vin'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('purchase_date', DATE(), table=<Customer_Ownership>, nullable=False), Column('purchase_price', INTEGER(), table=<Customer_Ownership>, nullable=False), Column('warantee_expire_date', DATE(), table=<Customer_Ownership>), Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Customer_Ownership>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024e9360>, None, link_to_name=True, table=Table('Customer_Ownership', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('customer_id', INTEGER(), ForeignKey('Customers.customer_id'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('vin', INTEGER(), ForeignKey('Car_Vins.vin'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('purchase_date', DATE(), table=<Customer_Ownership>, nullable=False), Column('purchase_price', INTEGER(), table=<Customer_Ownership>, nullable=False), Column('warantee_expire_date', DATE(), table=<Customer_Ownership>), Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Customer_Ownership>, nullable=False), schema=None)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024daf90>, None, link_to_name=True, table=Table('Customer_Ownership', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('customer_id', INTEGER(), ForeignKey('Customers.customer_id'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('vin', INTEGER(), ForeignKey('Car_Vins.vin'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('purchase_date', DATE(), table=<Customer_Ownership>, nullable=False), Column('purchase_price', INTEGER(), table=<Customer_Ownership>, nullable=False), Column('warantee_expire_date', DATE(), table=<Customer_Ownership>), Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Customer_Ownership>, nullable=False), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024efc40>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024e3ac0>",
                "foreign_keys":"{ForeignKey('Customers.customer_id'), ForeignKey('Dealers.dealer_id'), ForeignKey('Car_Vins.vin')}",
                "fullname":"Customer_Ownership",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Customer_Ownership",
                "primary_key":"PrimaryKeyConstraint(Column('customer_id', INTEGER(), ForeignKey('Customers.customer_id'), table=<Customer_Ownership>, primary_key=True, nullable=False), Column('vin', INTEGER(), ForeignKey('Car_Vins.vin'), table=<Customer_Ownership>, primary_key=True, nullable=False))",
                "schema":null
            }
        },
        "Customers":{
            "Name":"Customers",
            "Type":"table",
            "PrimaryKeys":[
                "customer_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"first_name",
                    "type":"TEXT(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"last_name",
                    "type":"TEXT(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"gender",
                    "type":"TEXT(20)",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"household_income",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"birthdate",
                    "type":"DATE",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"phone_number",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"email",
                    "type":"TEXT(128)",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"customer_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Customers.customer_id, Customers.first_name, Customers.last_name, Customers.gender, Customers.household_income, Customers.birthdate, Customers.phone_number, Customers.email)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Customers.customer_id, Customers.first_name, Customers.last_name, Customers.gender, Customers.household_income, Customers.birthdate, Customers.phone_number, Customers.email)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('customer_id', INTEGER(), table=<Customers>, primary_key=True))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024e6e50>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024e3cc0>",
                "foreign_keys":"set()",
                "fullname":"Customers",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Customers",
                "primary_key":"PrimaryKeyConstraint(Column('customer_id', INTEGER(), table=<Customers>, primary_key=True))",
                "schema":null
            }
        },
        "Dealer_Brand":{
            "Name":"Dealer_Brand",
            "Type":"table",
            "PrimaryKeys":[
                "dealer_id",
                "brand_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"dealer_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                },
                {
                    "name":"brand_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"2"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Dealer_Brand.dealer_id, Dealer_Brand.brand_id)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Dealer_Brand.dealer_id, Dealer_Brand.brand_id)",
                "comment":null,
                "constraints":"{ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024e9770>, None, link_to_name=True, table=Table('Dealer_Brand', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), Column('brand_id', INTEGER(), ForeignKey('Brands.brand_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), schema=None)), PrimaryKeyConstraint(Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), Column('brand_id', INTEGER(), ForeignKey('Brands.brand_id'), table=<Dealer_Brand>, primary_key=True, nullable=False)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024e9720>, None, link_to_name=True, table=Table('Dealer_Brand', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), Column('brand_id', INTEGER(), ForeignKey('Brands.brand_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024f7370>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024f2440>",
                "foreign_keys":"{ForeignKey('Brands.brand_id'), ForeignKey('Dealers.dealer_id')}",
                "fullname":"Dealer_Brand",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Dealer_Brand",
                "primary_key":"PrimaryKeyConstraint(Column('dealer_id', INTEGER(), ForeignKey('Dealers.dealer_id'), table=<Dealer_Brand>, primary_key=True, nullable=False), Column('brand_id', INTEGER(), ForeignKey('Brands.brand_id'), table=<Dealer_Brand>, primary_key=True, nullable=False))",
                "schema":null
            }
        },
        "Dealers":{
            "Name":"Dealers",
            "Type":"table",
            "PrimaryKeys":[
                "dealer_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"dealer_name",
                    "type":"VARCHAR(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"dealer_address",
                    "type":"VARCHAR(100)",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"dealer_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Dealers.dealer_id, Dealers.dealer_name, Dealers.dealer_address)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Dealers.dealer_id, Dealers.dealer_name, Dealers.dealer_address)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('dealer_id', INTEGER(), table=<Dealers>, primary_key=True))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024efa30>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024ebdc0>",
                "foreign_keys":"set()",
                "fullname":"Dealers",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Dealers",
                "primary_key":"PrimaryKeyConstraint(Column('dealer_id', INTEGER(), table=<Dealers>, primary_key=True))",
                "schema":null
            }
        },
        "Manufacture_Plant":{
            "Name":"Manufacture_Plant",
            "Type":"table",
            "PrimaryKeys":[
                "manufacture_plant_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"plant_name",
                    "type":"VARCHAR(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"plant_type",
                    "type":"TEXT(7)",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"plant_location",
                    "type":"VARCHAR(100)",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"company_owned",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"manufacture_plant_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Manufacture_Plant.manufacture_plant_id, Manufacture_Plant.plant_name, Manufacture_Plant.plant_type, Manufacture_Plant.plant_location, Manufacture_Plant.company_owned)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Manufacture_Plant.manufacture_plant_id, Manufacture_Plant.plant_name, Manufacture_Plant.plant_type, Manufacture_Plant.plant_location, Manufacture_Plant.company_owned)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('manufacture_plant_id', INTEGER(), table=<Manufacture_Plant>, primary_key=True)), CheckConstraint(<sqlalchemy.sql.elements.TextClause object at 0x1024d35e0>, table=Table('Manufacture_Plant', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('manufacture_plant_id', INTEGER(), table=<Manufacture_Plant>, primary_key=True), Column('plant_name', VARCHAR(length=50), table=<Manufacture_Plant>, nullable=False), Column('plant_type', TEXT(length=7), table=<Manufacture_Plant>), Column('plant_location', VARCHAR(length=100), table=<Manufacture_Plant>), Column('company_owned', INTEGER(), table=<Manufacture_Plant>), schema=None)), CheckConstraint(<sqlalchemy.sql.elements.TextClause object at 0x1024d36a0>, table=Table('Manufacture_Plant', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('manufacture_plant_id', INTEGER(), table=<Manufacture_Plant>, primary_key=True), Column('plant_name', VARCHAR(length=50), table=<Manufacture_Plant>, nullable=False), Column('plant_type', TEXT(length=7), table=<Manufacture_Plant>), Column('plant_location', VARCHAR(length=100), table=<Manufacture_Plant>), Column('company_owned', INTEGER(), table=<Manufacture_Plant>), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024d37c0>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x1024cd9c0>",
                "foreign_keys":"set()",
                "fullname":"Manufacture_Plant",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Manufacture_Plant",
                "primary_key":"PrimaryKeyConstraint(Column('manufacture_plant_id', INTEGER(), table=<Manufacture_Plant>, primary_key=True))",
                "schema":null
            }
        },
        "Models":{
            "Name":"Models",
            "Type":"table",
            "PrimaryKeys":[
                "model_id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"model_name",
                    "type":"VARCHAR(50)",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"model_base_price",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"brand_id",
                    "type":"INTEGER",
                    "nullable":"False",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"0"
                },
                {
                    "name":"model_id",
                    "type":"INTEGER",
                    "nullable":"True",
                    "default":"None",
                    "autoincrement":"auto",
                    "primary_key":"1"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(Models.model_id, Models.model_name, Models.model_base_price, Models.brand_id)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(Models.model_id, Models.model_name, Models.model_base_price, Models.brand_id)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('model_id', INTEGER(), table=<Models>, primary_key=True)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x1024cc2c0>, None, link_to_name=True, table=Table('Models', MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db)), Column('model_id', INTEGER(), table=<Models>, primary_key=True), Column('model_name', VARCHAR(length=50), table=<Models>, nullable=False), Column('model_base_price', INTEGER(), table=<Models>, nullable=False), Column('brand_id', INTEGER(), ForeignKey('Brands.brand_id'), table=<Models>, nullable=False), schema=None))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x1024c8910>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x102483cc0>",
                "foreign_keys":"{ForeignKey('Brands.brand_id')}",
                "fullname":"Models",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(sqlite:////Users/zhangjun/PycharmProjects/neptune-ng/data/sample.db))",
                "name":"Models",
                "primary_key":"PrimaryKeyConstraint(Column('model_id', INTEGER(), table=<Models>, primary_key=True))",
                "schema":null
            }
        }
    }
}